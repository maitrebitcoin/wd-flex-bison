#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : wd_compiler_base
 major_version : 27
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x12ba8def007bd50b
 internal_properties : BwAAAAcAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  type_code : 10
  p_codes :
   -
     code : |1-
      wd_compiler_base est une Classe
      	m_lexer est wd_lexer_base dynamique
      	en_mode_debug est un booléen 
      	
      	// règles de productions générée par wdBidon en fonction du .y
      	tab_règle_grammaire	est un tableau de RegleDeGrammaire		
      fin
      
      CONSTANT TOKEN_EOF  = -1 // fin de fichier
      CONSTANT TOKEN_NONE = 0  // aucun token valide
      EActionSurToken est une Enumération
      	Shift			= 1 // lire le token suivant
      	Reduce			= 2 // regroupe les token
      	EndCompile		= 3 // fin de la compilation
      	ErrorCompile	= 4 // lever un erreur de grammamire
      FIN
      RegleDeGrammaire est une structure
      	// n° de la règle
      	indice			est entier
      	// nom pour debug
      	Nom				est chaine
      	// liste des indice de token pour  séparé par ","
      	liste_indices_token est chaine
      	// code WL a exécuter lors
      	code_wl			est chaine
      FIN
     type : 131072
  procedures :
   -
     name : Constructeur
     procedure_id : 1349547095995766027
     type_code : 27
     code : |1+
      procédure Constructeur()
      
     type : 589824
   -
     name : Destructeur
     procedure_id : 1349547095995831563
     type_code : 28
     code : |1+
      procédure Destructeur()
     type : 655360
   -
     name : _compile_chaine
     procedure_id : 1349548161148296385
     type_code : 12
     code : |1-
      PROCÉDURE _compile_chaine( source_a_compiler est chaîne UNICODE) : booléen
      
      // pile des token en attende de pouvoir générer une règle valide (= faire un reduce)
      pile_token est chaine	
      
      // Init lexer
      m_lexer <- allouer un wd_lexer_base
      m_lexer.set_source(source_a_compiler)
      	PROCÉDURE INTERNE __donne_token_suivant() :wd_lexer_base::STToken
      		
      		résutat		est un wd_lexer_base::STToken
      		regle_lexer	est  wd_lexer_base::RegleAExécuter	<- m_lexer._donne_token_suivant()
      		résutat.valeur_chaine	= regle_lexer.token
      		résutat.règle			= regle_lexer.règle
      		//^TODO
      		résutat.valeur			= TOKEN_EOF
      		RENVOYER résutat
      	FIN
      
      BOUCLE
      	// récupération du token suivant
      	token_courant est wd_lexer_base::STToken  <- __donne_token_suivant()
      	// si c'est la fin du fichier
      	SI token_courant.valeur = TOKEN_EOF  ALORS
      		// erreur de la compilation
      		_erreur(<§R12ba93c90093b02d¤fr-FR¤Il manque la fin§>)
      		renvoyer faux
      	FIN
      	// si on a trouvé aucune règle de production valide
      	SI token_courant.valeur = TOKEN_NONE ALORS
      		// erreur de compilation
      		text_ligne_courante	est chaîne	= m_lexer:source_découpée_en_ligne[m_lexer:numéro_ligne_en_cours]
      		chaine_restante		est chaîne	= Milieu( text_ligne_courante, m_lexer:numéro_colonne_en_cours)			
      		_erreur( ChaîneConstruit(<§R12ba93d30094d5f5¤fr-FR¤Erreur de syntaxe : %1§>, chaine_restante ) )
      		RENVOYER Faux		
      	FIN
      	SI en_mode_debug ALORS
      		// trace chaque token
      		Trace( token_courant.règle.numero_regle + tab +  token_courant.valeur_chaine + TAB + m_lexer:numéro_ligne_en_cours)
      	FIN	
      	// on calcule ce qu'on doit faire avec ce token
      	action_token est EActionSurToken = _calcule_action_token(token_courant)
      	si action_token = ErrorCompile ALORS
      		RENVOYER Faux		
      	FIN
      	
      	
      FIN
     type : 458752
   -
     name : _calcule_action_token
     procedure_id : 1349547731651270021
     type_code : 12
     code : |1+
      PROCÉDURE _calcule_action_token(tok est wd_lexer_base::STToken, pile est chaine) : EActionSurToken
      
      SI tok.valeur = TOKEN_EOF ALORS
      	RENVOYER ErrorCompile
      FIN
      
      // calcul nouvel état avec ce nouveau token
      pile_avec_token	est chaine	= pile + [","] + tok.valeur
      
      // recherche les règles qui peuvent correspondre
      nombre_regle_possible	est entier		= 0
      POUR TOUT regle_de_grammaire DE tab_règle_grammaire
      	// si c'est exactement cette règle
      	si regle_de_grammaire.liste_indices_token = pile_avec_token ALORS
      		// trouvé
      		renvoyer  Reduce
      	FIN
      	// si c'est un début possible
      	si regle_de_grammaire.liste_indices_token.commencepar(pile_avec_token) ALORS
      		nombre_regle_possible++
      	FIN
      FIN
      // si aucune règle ne peut correspondre
      si nombre_regle_possible=0 ALORS
      	// erreur de grammaire
      	renvoyer ErrorCompile
      FIN
      
      
      RENVOYER Shift
     type : 458752
   -
     name : _erreur
     procedure_id : 1349550613575325067
     type_code : 12
     code : |1+
      // lever une erreur de compilation
      procédure _erreur( message_erreur est chaine)
      
      text_ligne_courante	est chaîne	= m_lexer:source_découpée_en_ligne[m_lexer:numéro_ligne_en_cours]
      chaine_restante		est chaîne	= Milieu( text_ligne_courante, m_lexer:numéro_colonne_en_cours)		
      m_lexer:_erreur( ChaîneConstruit("ligne %1: %2"+rc+ "%3" , m_lexer:numéro_ligne_en_cours,text_ligne_courante, message_erreur ) )
     type : 458752
   -
     name : get_texte_erreur
     procedure_id : 1349555466892644556
     type_code : 12
     code : |1+
      // renvoie le texte de la dernière erreur
      procédure get_texte_erreur() : chaîne
      renvoyer m_lexer:m_sErreur
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BwAAAAcAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : Classe1
resources :
 string_res :
  identifier : 0x12ba8dc50078330e
  internal_properties : BwAAAAcAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BwAAAAcAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
