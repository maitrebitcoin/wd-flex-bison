#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : modele_lexer_genere
 major_version : 27
 minor_version : 0
 type : 4
 description : ""
 subtype : 0
class :
 identifier : 0x12bbe10800e66b28
 internal_properties : BwAAAAcAAAB2/vstTMCJbS/hlxjFxirSqKvCUuv8YxgpWyl7S3iA
 code_elements :
  type_code : 10
  p_codes :
   -
     code : |1-
      modele_lexer_genere est une Classe
      	hérite de wd_lexer_base
      
      //%CODE_DECLARATION_MEMBRE%
      
      fin
      //%CODE_DECLARATION_TOKEN%
     type : 131072
  procedures :
   -
     name : Constructeur
     procedure_id : 1349919937818749736
     type_code : 27
     code : |1-
      procédure Constructeur(dest_en_mode_debug est un booléen)
      :dest_en_mode_debug=dest_en_mode_debug
      
      //%CODE_INIT_CHAINEVERSTOKEN%
     type : 589824
   -
     name : Destructeur
     procedure_id : 1349919937818815272
     type_code : 28
     code : |1+
      procédure Destructeur()
     type : 655360
   -
     name : token_suivant
     procedure_id : 1349919937818880808
     type_code : 12
     code : |1+
      // appelée par le compilateur pour obtenir un nouveau mot (=token).
      // renvoie l'id du token  ex: "A"=>64 ou "// commentaire"=>256.
      // renvoie -1 si la fin du fichier est atteinte
      PROCÉDURE token_suivant() : entier
      
      // avance jusqu'au la fin du fichier ou une erreur de syntaxe 
      boucle
      	// appel de la classe de base pour avoir la regle lexicale 
      	règle_a_exécuter est wd_lexer_base::RegleAExécuter  = donne_token_suivant()
      	// si aucune règle de correspond au texte en cours
      	si règle_a_exécuter = null alors 
      		// erreur de syntaxe
      		RENVOYER wd_compilateur_base::TOKEN_AUCUN
      	FIN
      	// si c'est la fin du fichier
      	SI règle_a_exécuter.est_terminé ALORS
      		RENVOYER wd_compilateur_base::TOKEN_EOF
      	FIN
      	// Initialisation des variable pour le code utilisateur
      	:règle_lex_en_cours = règle_a_exécuter.règle
      	:yytext		        = règle_a_exécuter.token
      	:yyline		        = règle_a_exécuter.numéro_ligne
      	
      	SI en_mode_verbose ALORS
      		// trace chaque token trouvé et le code source .l associé.
      		//ex : "7 > [0-9] {valeur_courante = yytext; return T_INT;}
      		Trace( :yytext + " > " + règle_a_exécuter.règle.source_dump )
      	FIN		
      	
      	SELON règle_a_exécuter.règle.indice_regle_lex
      		CAS wd_compilateur_base::TOKEN_EOF : RENVOYER wd_compilateur_base::TOKEN_EOF
      			// code généré a partir de sources .l
      //%CODE_GESTION_TOKEN%
      			
      		AUTRE CAS
      			// erreur de syntaxe
      			RENVOYER wd_compilateur_base::TOKEN_AUCUN
      	FIN
      
      fin//BOUCLE
      
      
      
      
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : BwAAAAcAAAA6ih3UbgNXHwTtiPSFUEj+2fi/m7v4QV2rqidAupM=
  original_name : Classe1
resources :
 string_res :
  identifier : 0x12bbe08400db64aa
  internal_properties : BwAAAAcAAAAnMYFQ1bL/vz9ehh7L22SNNSlIzGTOI8h5F/WtgDNP
custom_note :
 internal_properties : BwAAAAcAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
